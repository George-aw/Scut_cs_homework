#include<iostream>
using namespace std;
void mergesort(int A[],int temp[],int left,int right,long long&count)
{
	if(left==right)return;
	int mid=(left+right)/2;
	mergesort(A,temp,left,mid,count);
	mergesort(A,temp,mid+1,right,count);
	for(int i=left;i<=right;i++)
		temp[i]=A[i];
	int i1=left;int i2=mid+1;
	for(int curr=left;curr<=right;curr++)
	{
		if(i1==mid+1)
			A[curr]=temp[i2++];
		else if(i2>right)
			A[curr]=temp[i1++];
		else if(temp[i1]<temp[i2])
		{
			A[curr]=temp[i1++];
		}
		else 
		{
			A[curr]=temp[i2++];
			count+=mid-i1+1;
		}
	}
}
int s[500005],temp[500005];
int main()
{
    int n,i;
    while(cin>>n&&n)
    {
        long long count=0;
        for(i=0; i<n; i++)
            cin>>s[i];
        mergesort(s,temp,0,n-1,count);
        cout<<count<<endl;
    }
    return 0;
}