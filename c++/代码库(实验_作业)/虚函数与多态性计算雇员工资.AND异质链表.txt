#include<iostream>
#include<string>
#include<iomanip>
using namespace std;
class employee
{
public:
	employee(const long,const char*);
	virtual ~employee();//虚析构
	const char*getname()const;
	const long getnumber()const;
	virtual double earnings()const=0;//纯虚函数算月薪
	virtual void print()const;//虚函数PRINT
	employee*next;//增加指针
protected:
	long number;
	char name[20];
};
employee::employee(const long k,const char*str)
{
	number=k;
	strcpy_s(name,20,str);
}
employee::~employee()
{name[0]='\0';}
const char*employee::getname()const
{return name;}
const long employee::getnumber()const
{return number;}
void employee::print()const
{cout<<number<<setw(20)<<name;}
class manager:public employee
{
public:
	manager(const long,const char*,double =0.0);
	~manager(){}
	void setmonthlysalary(double);
	virtual double earnings()const;//
	virtual void print()const;//
private:
	double monthlysalary;
};
manager::manager(const long k,const char*str,double sal)
	:employee(k,str){setmonthlysalary(sal);}
void manager::setmonthlysalary(double sal)
{monthlysalary=sal>0?sal:0;}
double manager::earnings()const
{return monthlysalary;}
void manager::print()const
{
	employee::print();
	cout<<setw(16)<<"manager"<<endl;
	cout<<"\tearned$"<<monthlysalary<<endl;
}
class hourlyworker:public employee
{
public:
	hourlyworker(const long,const char*,double=0.0,int=0);
	~hourlyworker(){};
	void setwage(double);
	void sethours(int);
	virtual double earnings() const;//
	virtual void print()const;
private:
	double wage;
	double hours;
};
hourlyworker::hourlyworker(const long k,const char*str,double w,int h)
	:employee(k,str)
{
	setwage(w);
	sethours(h);
}
void hourlyworker::setwage(double w)
{wage=w>0?w:0;}
void hourlyworker::sethours(int h)
{hours=h>=0&&h<=16*31?h:0;}
double hourlyworker::earnings()const
{
	if(hours<=8*22)return wage*hours;
	else 
		return wage*(8*22)+(hours-8*22)*wage*1.5;
}
void hourlyworker::print()const
{
	employee::print();
	cout<<setw(16)<<"hours worker"<<endl;
	cout<<"\twageperhour"<<wage<<" hour"<<hours;
	cout<<" earned$"<<earnings()<<endl;
}
class pieceworker:public employee
{
public:
	pieceworker(const long,const char*,double=0.0,int=0);
	~pieceworker(){}
	void setwage(double);
	void setquantity(int);
	virtual double earnings()const;
	virtual void print()const;
private:
	double wageperpiece;
	int quantity;
};
pieceworker::pieceworker(const long k,const char*str,double w,int q)
	:employee(k,str)
{
	setwage(w);
	setquantity(q);
}
void pieceworker::setwage(double w)
{wageperpiece=w>0?w:0;}
void pieceworker::setquantity(int q)
{quantity=q>0?q:0;}
double pieceworker::earnings()const
{return quantity*wageperpiece;}
void pieceworker::print()const
{
	employee::print();
	cout<<setw(16)<<"piece worker"<<endl;
	cout<<"\twageperpiece"<<wageperpiece<<" quantity"<<quantity;
	cout<<" eared$"<<earnings()<<endl;
}
void test1()
{
	cout<<setiosflags(ios::fixed|ios::showpoint)<<setprecision(2);
	manager m1(10135,"cheng shaohua",1200);
	manager m2(10201,"yan haifeng");
	m2.setmonthlysalary(5300);
	hourlyworker hw1(30712,"zhao xiaoming",5,8*20);
	hourlyworker hw2(30649,"gao dongsheng");
	hw2.setwage(4.5);
	hw2.sethours(10*30);
	pieceworker pw1(20382,"xiu liwei",0.5,2850);
	pieceworker pw2(20496,"huang donglin");
	pw2.setwage(0.75);
	pw2.setquantity(1850);
	//使用抽象类指针，调用派生类版本的函数
	employee*baseptr;
	baseptr=&m1;baseptr->print();
	baseptr=&m2;baseptr->print();
	baseptr=&hw1;baseptr->print();
	baseptr=&hw2;baseptr->print();
	baseptr=&pw1;baseptr->print();
	baseptr=&pw2;baseptr->print();
}
void test2()
{
	employee*employ[6];
	int i;
	employ[0]=new manager(10135,"cheng shaohua",1200);
	employ[1]=new manager(10201,"yan haifeng",5300);
	employ[2]=new hourlyworker(30712,"zhao xiaoming",5,8*20);
	employ[3]=new hourlyworker(30649,"gao dongsheng",4.5,10*30);
	employ[4]=new pieceworker(20382,"xiu liwei",0.5,2850);
	employ[5]=new pieceworker(20496,"huang donglin",0.75,1850);
	cout<<setiosflags(ios::fixed)<<setprecision(2);
	for(i=0;i<6;i++)
		employ[i]->print();
	for(i=0;i<6;i++)
		cout<<employ[i]->getname()<<" "<<employ[i]->earnings()<<endl;
}
void addfront(employee*&h,employee*&t)
{t->next=h;h=t;}
void test3()
{
	employee*emphead=NULL,*ptr;
	ptr=new manager(10135,"cheng shaohua",1200);
	addfront(emphead,ptr);
	ptr=new hourlyworker(30712,"zhao xiaoming",5,8*20);
	addfront(emphead,ptr);
	ptr=new pieceworker(20382,"xiu liwei",0.5,2850);
	addfront(emphead,ptr);
	ptr=emphead;
	while(ptr)
	{
		ptr->print();
		ptr=ptr->next;
	}
	ptr=emphead;
	while(ptr)
	{
		cout<<ptr->getname()<<" "<<ptr->earnings()<<endl;
		ptr=ptr->next;
	}
}
int main()
{
	test1();
	test2();
	test3();
}