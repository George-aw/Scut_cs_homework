#include<iostream>
using namespace std;
template<typename T>
class T_counter
{
public:
	int n;
	T *a;	
	T_counter(int nn):n(nn){a=new int[n];}
	T_counter operator+(T_counter<T> v){for(int i=0;i<n;i++) a[i]+=v.a[i];return *this;}
	T_counter operator-(T_counter<T> v){for(int i=0;i<n;i++) a[i]-=v.a[i];return *this;}
	template<typename T>
	friend ostream& operator<<(ostream& out,const T_counter<T> &b);
	template<typename T>
	friend istream& operator>>(istream& in,const T_counter<T> &b);
};
template<typename T>
ostream& operator<<(ostream& out,const T_counter<T> &b)
{
	for(int i=0;i<b.n-1;i++)out<<b.a[i]<<' ';
	out<<b.a[b.n-1]<<endl;
	return out;
}
template<typename T>
istream& operator>>(istream& in,T_counter<T> &b)
{
	for(int i=0;i<b.n;i++) in>>b.a[i];
	return in;
}
int main()
{
	char c;
	int n;
	while(cin>>c)
	{
		cin>>n;
		T_counter<int> A(n);
		T_counter<int> B(n);
		cin>>A>>B;
		if(c=='+') cout<<A+B<<endl;
		if(c=='-') cout<<A-B<<endl;
	}
}
